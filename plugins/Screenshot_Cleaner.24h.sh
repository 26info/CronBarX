#!/bin/bash

# =============================================================================
# Screenshot Cleaner for CronBarX / –û—á–∏—Å—Ç–∏—Ç–µ–ª—å —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –¥–ª—è CronBarX
# =============================================================================
#
# ENGLISH:
# Automatically removes screenshot files older than 24 hours from desktop.
# Targets files with naming pattern: "–°–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞ YYYY-MM-DD at HH.MM.SS"
#
# –†–£–°–°–ö–ò–ô:
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª—ã —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤ —Å —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞.
# –†–∞–±–æ—Ç–∞–µ—Ç —Å —Ñ–∞–π–ª–∞–º–∏ –ø–æ —à–∞–±–ª–æ–Ω—É: "–°–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞ –ì–ì–ì–ì-–ú–ú-–î–î –≤ –ß–ß.–ú–ú.–°–°"
#
# FEATURES / –û–°–û–ë–ï–ù–ù–û–°–¢–ò:
# - üïê Age-based cleaning (24+ hours) / –û—á–∏—Å—Ç–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É (24+ —á–∞—Å–æ–≤)
# - üéØ Precise pattern matching / –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ —à–∞–±–ª–æ–Ω—É –∏–º–µ–Ω
# - üìä Smart monitoring with size calculation / –£–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å —Ä–∞—Å—á–µ—Ç–æ–º —Ä–∞–∑–º–µ—Ä–∞
# - üëÄ Visual dialog preview / –í–∏–∑—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤ –¥–∏–∞–ª–æ–≥–µ
# - üîî System notifications / –°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
# - üõ°Ô∏è Safe operation with confirmation / –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
#
# USAGE / –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
# Add to CronBarX and click menu items / –î–æ–±–∞–≤–∏—Ç—å –≤ CronBarX –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ –º–µ–Ω—é
# =============================================================================

DESKTOP_PATH="$HOME/Desktop"

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏ –ø–æ–¥—Å—á–µ—Ç–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
# Function to find and count screenshots
find_screenshots() {
    local count=0
    local total_size=0
    local current_time=$(date +%s)
    local one_day_ago=$((current_time - 86400)) # 24 —á–∞—Å–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö / 24 hours in seconds
    
    # –¢–æ—á–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ macOS –Ω–∞ —Ä—É—Å—Å–∫–æ–º
    # Exact pattern for Russian macOS screenshots
    while IFS= read -r file; do
        if [[ -f "$file" ]]; then
            local file_time=$(stat -f %m "$file" 2>/dev/null || stat -c %Y "$file" 2>/dev/null)
            if [[ -n "$file_time" && "$file_time" -lt "$one_day_ago" ]]; then
                ((count++))
                local size=$(stat -f %z "$file" 2>/dev/null || stat -c %s "$file" 2>/dev/null)
                total_size=$((total_size + size))
            fi
        fi
    done < <(find "$DESKTOP_PATH" -maxdepth 1 -name "–°–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞ *" -type f 2>/dev/null)
    
    echo "$count:$total_size"
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
# Function to delete old screenshots
delete_old_screenshots() {
    local deleted_count=0
    local freed_space=0
    local current_time=$(date +%s)
    local one_day_ago=$((current_time - 86400))
    
    while IFS= read -r file; do
        if [[ -f "$file" ]]; then
            local file_time=$(stat -f %m "$file" 2>/dev/null || stat -c %Y "$file" 2>/dev/null)
            if [[ -n "$file_time" && "$file_time" -lt "$one_day_ago" ]]; then
                local size=$(stat -f %z "$file" 2>/dev/null || stat -c %s "$file" 2>/dev/null)
                local filename=$(basename "$file")
                
                echo "üóëÔ∏è –£–¥–∞–ª—è–µ–º: $filename"
                rm "$file"
                
                ((deleted_count++))
                freed_space=$((freed_space + size))
            fi
        fi
    done < <(find "$DESKTOP_PATH" -maxdepth 1 -name "–°–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞ *" -type f 2>/dev/null)
    
    echo "$deleted_count:$freed_space"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
# Function to format file size
format_size() {
    local bytes=$1
    if [[ $bytes -ge 1048576 ]]; then
        echo "$((bytes / 1048576)) MB"
    elif [[ $bytes -ge 1024 ]]; then
        echo "$((bytes / 1024)) KB"
    else
        echo "${bytes} B"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–∏–∞–ª–æ–≥–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º
# Function to show list dialog
show_list_dialog() {
    local current_time=$(date +%s)
    local one_day_ago=$((current_time - 86400))
    local file_list=""
    local total_count=0
    local total_size=0
    
    # –°–æ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
    # Collect file list
    while IFS= read -r file; do
        if [[ -f "$file" ]]; then
            local file_time=$(stat -f %m "$file" 2>/dev/null || stat -c %Y "$file" 2>/dev/null)
            if [[ -n "$file_time" && "$file_time" -lt "$one_day_ago" ]]; then
                local filename=$(basename "$file")
                local size=$(stat -f %z "$file" 2>/dev/null || stat -c %s "$file" 2>/dev/null)
                local age=$(( (current_time - file_time) / 3600 ))
                local size_kb=$((size / 1024))
                
                file_list="${file_list}‚Ä¢ ${filename}\n   üìè ${size_kb} KB ‚Ä¢ üïê ${age} —á–∞—Å–æ–≤\n"
                ((total_count++))
                total_size=$((total_size + size))
            fi
        fi
    done < <(find "$DESKTOP_PATH" -maxdepth 1 -name "–°–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞ *" -type f 2>/dev/null | sort -r)
    
    if [[ $total_count -eq 0 ]]; then
        osascript -e 'display dialog "‚úÖ –°—Ç–∞—Ä—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\n\n–§–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ." buttons {"OK"} default button "OK" with icon note'
    else
        local message="üìã –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤: ${total_count}\nüíæ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: $(format_size $total_size)\n\n${file_list}\n\n–≠—Ç–∏ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ."
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å –∫–Ω–æ–ø–∫–æ–π –æ—á–∏—Å—Ç–∫–∏
        # Show dialog with cleanup button
        local result=$(osascript -e "button returned of (display dialog \"$message\" buttons {\"–û—Ç–º–µ–Ω–∞\", \"–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë\"} default button \"–û—Ç–º–µ–Ω–∞\" with icon caution)")
        
        if [[ "$result" == "–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë" ]]; then
            # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É
            # Start cleanup
            "$0" _clean
        fi
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é CronBarX
# Main CronBarX menu
main() {
    local screenshot_info=$(find_screenshots)
    local old_count=$(echo "$screenshot_info" | cut -d: -f1)
    local old_size=$(echo "$screenshot_info" | cut -d: -f2)
    
    echo "üóëÔ∏è"
    echo "---"
    
    if [ "$old_count" -eq 0 ]; then
        echo "‚úÖ –°—Ç–∞—Ä—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        echo "üìÖ –£–¥–∞–ª—è—é—Ç—Å—è —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤"
    else
        echo "üì∏ –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤: $old_count"
        echo "üíæ –ú–æ–∂–Ω–æ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å: $(format_size $old_size)"
        echo "‚è∞ –í–æ–∑—Ä–∞—Å—Ç: –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤"
    fi
    
    echo "---"
    
    if [ "$old_count" -gt 0 ]; then
        echo "üöÄ –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã | shell=\"$0\" param1=\"_clean\" refresh=true"
        echo "üëÄ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ | shell=\"$0\" param1=\"_list_dialog\""
    fi
    
    echo "üìÅ –û—Ç–∫—Ä—ã—Ç—å —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª | shell=open param1=\"$DESKTOP_PATH\""
    echo "üîÑ –û–±–Ω–æ–≤–∏—Ç—å | refresh=true"
}

# –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
# Clean old screenshots
_clean() {
    local delete_info=$(delete_old_screenshots)
    local deleted_count=$(echo "$delete_info" | cut -d: -f1)
    local freed_space=$(echo "$delete_info" | cut -d: -f2)
    
    if [ "$deleted_count" -gt 0 ]; then
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        # Show notification
        osascript -e "display notification \"–£–¥–∞–ª–µ–Ω–æ $deleted_count —Å—Ç–∞—Ä—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤\" with title \"CronBarX Cleaner\" subtitle=\"–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ: $(format_size $freed_space)\""
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        # Update interface
        echo "‚úÖ –£–¥–∞–ª–µ–Ω–æ: $deleted_count —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤"
        echo "üíæ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ: $(format_size $freed_space)"
        echo "---"
        echo "üóëÔ∏è  –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã"
    else
        echo "‚ÑπÔ∏è  –°—Ç–∞—Ä—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        echo "---"
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
# Parameter handling
case "${1}" in
    "_clean") _clean ;;
    "_list_dialog") show_list_dialog ;;
    *) main ;;
esac
