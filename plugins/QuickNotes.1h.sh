#!/bin/bash
# Quick Notes Manager - CronBarX

NOTES_FILE="$HOME/quick_notes.txt"
mkdir -p "$(dirname "$NOTES_FILE")"
touch "$NOTES_FILE"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
clean_text() {
    local text="$1"
    # –ó–∞–º–µ–Ω—è–µ–º –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –Ω–∞ –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ
    text="${text//\"/\'}"
    # –£–¥–∞–ª—è–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    text="${text//\\/}"
    # –£–¥–∞–ª—è–µ–º –¥—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    text="${text//|/}"
    text="${text//$/}"
    text="${text//\`/}"
    text="${text//!/}"
    # –£–¥–∞–ª—è–µ–º multiple spaces and trim
    echo "$text" | sed 's/  */ /g' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
}

main() {
    echo "üìù –ó–∞–º–µ—Ç–∫–∏"
    echo "---"
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    local note_count=$(wc -l < "$NOTES_FILE" 2>/dev/null || echo 0)
    local file_size=$(du -h "$NOTES_FILE" 2>/dev/null | cut -f1)
    
    echo "üìä –í—Å–µ–≥–æ: $note_count –∑–∞–º–µ—Ç–æ–∫ ($file_size)"
    echo "---"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏ —Å—Ä–∞–∑—É –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é (–ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–≤–µ—Ä—Ö—É)
    if [ "$note_count" -gt 0 ]; then
        echo "üìñ –í–∞—à–∏ –∑–∞–º–µ—Ç–∫–∏:"
        
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∏ –≤—ã–≤–æ–¥–∏–º –∑–∞–º–µ—Ç–∫–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–≤–µ—Ä—Ö—É)
        local lines=()
        while IFS= read -r line; do
            lines+=("$line")
        done < "$NOTES_FILE"
        
        # –í—ã–≤–æ–¥–∏–º –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        for ((i=${#lines[@]}-1; i>=0; i--)); do
            local line="${lines[i]}"
            local note_id=$(echo "$line" | cut -d'|' -f1)
            local timestamp=$(echo "$line" | cut -d'|' -f2)
            local content=$(echo "$line" | cut -d'|' -f3-)
            local short_content=$(echo "$content" | cut -c1-50)
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—ã–≤–æ–¥ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
            echo "$short_content... | shell=\"$0\" param1=\"_view_note\" param2=\"$note_id\""
        done
        
        echo "---"
    else
        echo "üì≠ –ù–µ—Ç –∑–∞–º–µ—Ç–æ–∫"
        echo "---"
    fi
    
    # –ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–º–µ—Ç–æ–∫
    echo "‚úèÔ∏è –ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ:"
    echo "üìù –ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞ | shell=\"$0\" param1=\"_new_note\" refresh=true"
    echo "üí° –ò–¥–µ—è | shell=\"$0\" param1=\"_template_note\" param2=\"üí° –ò–¥–µ—è\" refresh=true"
    echo "üìÖ –ó–∞–¥–∞—á–∞ | shell=\"$0\" param1=\"_template_note\" param2=\"üìÖ –ó–∞–¥–∞—á–∞\" refresh=true"
    echo "üõí –ü–æ–∫—É–ø–∫–∏ | shell=\"$0\" param1=\"_template_note\" param2=\"üõí –ü–æ–∫—É–ø–∫–∏\" refresh=true"
    
    echo "---"
    
    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    echo "üõ†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
    if [ "$note_count" -gt 0 ]; then
        echo "üîç –ü–æ–∏—Å–∫ | shell=\"$0\" param1=\"_search_notes\""
        echo "üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ | shell=\"$0\" param1=\"_clear_notes\" refresh=true"
    fi
    echo "üìÅ –û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª | shell=\"$0\" param1=\"_open_file\""
    
    echo "---"
    echo "üîÑ –û–±–Ω–æ–≤–∏—Ç—å | refresh=true"
}

# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä ID –¥–ª—è –∑–∞–º–µ—Ç–æ–∫
generate_id() {
    date +%s
}

# –ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞
new_note() {
    local result=$(osascript -e 'text returned of (display dialog "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏:" default answer "" buttons {"–û—Ç–º–µ–Ω–∞", "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"} default button "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")')
    
    if [ -n "$result" ]; then
        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        local clean_result=$(clean_text "$result")
        
        local note_id=$(generate_id)
        local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
        echo "${note_id}|${timestamp}|${clean_result}" >> "$NOTES_FILE"
        osascript -e "display notification \"‚úÖ –ó–∞–º–µ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞\" with title \"–ó–∞–º–µ—Ç–∫–∏\"" &>/dev/null
        echo "‚úÖ –ó–∞–º–µ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"
    else
        echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
    fi
}

# –ó–∞–º–µ—Ç–∫–∞ –ø–æ —à–∞–±–ª–æ–Ω—É
template_note() {
    local template="$1"
    local result=$(osascript -e "text returned of (display dialog \"${template}:\" default answer \"\" buttons {\"–û—Ç–º–µ–Ω–∞\", \"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å\"} default button \"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å\")")
    
    if [ -n "$result" ]; then
        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        local clean_result=$(clean_text "$result")
        
        local note_id=$(generate_id)
        local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
        echo "${note_id}|${timestamp}|${template}: ${clean_result}" >> "$NOTES_FILE"
        osascript -e "display notification \"‚úÖ ${template} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞\" with title \"–ó–∞–º–µ—Ç–∫–∏\"" &>/dev/null
        echo "‚úÖ ${template} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"
    else
        echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
    fi
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–º–µ—Ç–∫–∏ (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
view_note() {
    local note_id="$1"
    local note_line=$(grep "^${note_id}|" "$NOTES_FILE")
    
    if [ -z "$note_line" ]; then
        osascript -e 'display dialog "‚ùå –ó–∞–º–µ—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" buttons {"OK"} default button "OK" with icon stop' &>/dev/null
        echo "‚ùå –ó–∞–º–µ—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        return
    fi
    
    local timestamp=$(echo "$note_line" | cut -d'|' -f2)
    local content=$(echo "$note_line" | cut -d'|' -f3-)
    
    # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º
    local clean_content=$(clean_text "$content")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –¥–∏–∞–ª–æ–≥ –±–µ–∑ —Å–ª–æ–∂–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    local action=$(osascript -e "button returned of (display dialog \"–ó–∞–º–µ—Ç–∫–∞:\\n–í—Ä–µ–º—è: $timestamp\\n\\n$clean_content\" buttons {\"–ù–∞–∑–∞–¥\", \"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\", \"–£–¥–∞–ª–∏—Ç—å\"} default button \"–ù–∞–∑–∞–¥\")")
    
    case "$action" in
        "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")
            edit_note "$note_id" "$clean_content"
            ;;
        "–£–¥–∞–ª–∏—Ç—å")
            delete_note "$note_id"
            ;;
        *)
            echo "üîô –ù–∞–∑–∞–¥"
            ;;
    esac
}

# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
edit_note() {
    local note_id="$1"
    local old_content="$2"
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º –≤ –¥–∏–∞–ª–æ–≥–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    local clean_old_content=$(clean_text "$old_content")
    
    local new_content=$(osascript -e "text returned of (display dialog \"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫—É:\" default answer \"$clean_old_content\" buttons {\"–û—Ç–º–µ–Ω–∞\", \"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å\"} default button \"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å\")")
    
    if [ -n "$new_content" ]; then
        # –û—á–∏—â–∞–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
        local clean_content=$(clean_text "$new_content")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –±–µ–∑ —ç—Ç–æ–π –∑–∞–º–µ—Ç–∫–∏
        grep -v "^${note_id}|" "$NOTES_FILE" > "${NOTES_FILE}.tmp"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∑–∞–º–µ—Ç–∫—É
        local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
        echo "${note_id}|${timestamp}|${clean_content}" >> "${NOTES_FILE}.tmp"
        
        # –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
        mv "${NOTES_FILE}.tmp" "$NOTES_FILE"
        
        osascript -e "display notification \"‚úÖ –ó–∞–º–µ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞\" with title \"–ó–∞–º–µ—Ç–∫–∏\"" &>/dev/null
        echo "‚úÖ –ó–∞–º–µ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
    else
        echo "‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
    fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
delete_note() {
    local note_id="$1"
    local note_line=$(grep "^${note_id}|" "$NOTES_FILE")
    local note_content=$(echo "$note_line" | cut -d'|' -f3- | cut -c1-30)
    
    # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º –≤ –¥–∏–∞–ª–æ–≥–µ —É–¥–∞–ª–µ–Ω–∏—è
    local clean_note_content=$(clean_text "$note_content")
    
    local response=$(osascript -e "button returned of (display dialog \"–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É?\\n\\n$clean_note_content...\" buttons {\"–û—Ç–º–µ–Ω–∞\", \"–£–¥–∞–ª–∏—Ç—å\"} default button \"–û—Ç–º–µ–Ω–∞\" with icon caution)")
    
    if [ "$response" = "–£–¥–∞–ª–∏—Ç—å" ]; then
        grep -v "^${note_id}|" "$NOTES_FILE" > "${NOTES_FILE}.tmp"
        mv "${NOTES_FILE}.tmp" "$NOTES_FILE"
        osascript -e "display notification \"üóëÔ∏è –ó–∞–º–µ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∞\" with title \"–ó–∞–º–µ—Ç–∫–∏\"" &>/dev/null
        echo "üóëÔ∏è –ó–∞–º–µ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∞"
    else
        echo "‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
    fi
}

# –ü–æ–∏—Å–∫ –≤ –∑–∞–º–µ—Ç–∫–∞—Ö
search_notes() {
    local note_count=$(wc -l < "$NOTES_FILE" 2>/dev/null || echo 0)
    
    if [ "$note_count" -eq 0 ]; then
        osascript -e 'display dialog "üìù –ó–∞–º–µ—Ç–∫–∏ –ø—É—Å—Ç—ã" buttons {"OK"} default button "OK" with icon note' &>/dev/null
        return
    fi
    
    local search_term=$(osascript -e 'text returned of (display dialog "–ü–æ–∏—Å–∫ –≤ –∑–∞–º–µ—Ç–∫–∞—Ö:" default answer "" buttons {"–û—Ç–º–µ–Ω–∞", "–ù–∞–π—Ç–∏"} default button "–ù–∞–π—Ç–∏")')
    
    if [ -z "$search_term" ]; then
        echo "‚ùå –ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω"
        return
    fi
    
    # –û—á–∏—â–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    local clean_search_term=$(clean_text "$search_term")
    
    local results=$(grep -i "$clean_search_term" "$NOTES_FILE")
    local result_count=$(echo "$results" | grep -c . || echo 0)
    
    if [ "$result_count" -eq 0 ]; then
        osascript -e "display dialog \"–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É: '$clean_search_term'\" buttons {\"OK\"} default button \"OK\" with icon stop" &>/dev/null
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ: '$clean_search_term'"
        return
    fi
    
    echo "üîç –ù–∞–π–¥–µ–Ω–æ $result_count –∑–∞–º–µ—Ç–æ–∫ –ø–æ '$clean_search_term':"
    echo "---"
    
    echo "$results" | tail -10 | while IFS= read -r line; do
        local note_id=$(echo "$line" | cut -d'|' -f1)
        local content=$(echo "$line" | cut -d'|' -f3- | cut -c1-50)
        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ–∏—Å–∫–∞
        local clean_content=$(clean_text "$content")
        echo "$clean_content... | shell=\"$0\" param1=\"_view_note\" param2=\"$note_id\""
    done
    
    echo "---"
    echo "üîô –ù–∞–∑–∞–¥ | shell=\"$0\""
}

# –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏
clear_notes() {
    local note_count=$(wc -l < "$NOTES_FILE" 2>/dev/null || echo 0)
    
    if [ "$note_count" -eq 0 ]; then
        echo "üì≠ –ó–∞–º–µ—Ç–∫–∏ —É–∂–µ –ø—É—Å—Ç—ã"
        return
    fi
    
    local response=$(osascript -e "button returned of (display dialog \"–£–¥–∞–ª–∏—Ç—å –í–°–ï $note_count –∑–∞–º–µ—Ç–æ–∫?\\n\\n–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!\" buttons {\"–û—Ç–º–µ–Ω–∞\", \"–£–¥–∞–ª–∏—Ç—å\"} default button \"–û—Ç–º–µ–Ω–∞\" with icon caution)")
    
    if [ "$response" = "–£–¥–∞–ª–∏—Ç—å" ]; then
        > "$NOTES_FILE"
        osascript -e 'display notification "üóëÔ∏è –í—Å–µ –∑–∞–º–µ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω—ã" with title "–ó–∞–º–µ—Ç–∫–∏"' &>/dev/null
        echo "üóëÔ∏è –í—Å–µ –∑–∞–º–µ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω—ã"
    else
        echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
    fi
}

# –û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ
open_file() {
    if [ -f "$NOTES_FILE" ]; then
        open -e "$NOTES_FILE"
        echo "üìÅ –§–∞–π–ª –æ—Ç–∫—Ä—ã—Ç –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ"
    else
        echo "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
case "${1}" in
    "_new_note") new_note ;;
    "_template_note") template_note "${2}" ;;
    "_view_note") view_note "${2}" ;;
    "_search_notes") search_notes ;;
    "_clear_notes") clear_notes ;;
    "_open_file") open_file ;;
    *) main ;;
esac