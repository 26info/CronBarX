#!/bin/bash
# Image Buffer Manager - CronBarX

SAVE_DIR="$HOME/Desktop/Clipboard_Images"
mkdir -p "$SAVE_DIR"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ pngpaste
find_pngpaste() {
    local paths=(
        "/usr/local/bin/pngpaste"
        "/opt/homebrew/bin/pngpaste"
        "/opt/local/bin/pngpaste"
    )
    
    for path in "${paths[@]}"; do
        if [ -x "$path" ]; then
            echo "$path"
            return 0
        fi
    done
    
    local which_path=$(which pngpaste 2>/dev/null)
    if [ -n "$which_path" ] && [ -x "$which_path" ]; then
        echo "$which_path"
        return 0
    fi
    
    return 1
}

PNGPASTE=$(find_pngpaste)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –±—É—Ñ–µ—Ä –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
save_to_tmp() {
    local tmp_file=$(mktemp).png
    
    if [ -z "$PNGPASTE" ]; then
        return 1
    fi
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    if "$PNGPASTE" "$tmp_file" 2>/dev/null; then
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –∏ –Ω–µ –ø—É—Å—Ç–æ–π
        if [ -f "$tmp_file" ] && [ -s "$tmp_file" ]; then
            local file_size=$(wc -c < "$tmp_file" 2>/dev/null)
            if [ "$file_size" -gt 100 ]; then
                echo "$tmp_file:$file_size"
                return 0
            fi
        fi
    fi
    
    rm -f "$tmp_file" 2>/dev/null
    return 1
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üì∏"
    echo "---"
    
    if [ -z "$PNGPASTE" ]; then
        echo "‚ùå pngpaste –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        echo "---"
        echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å pngpaste | shell=\"$0\" param1=\"_install\""
        return
    fi
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –±—É—Ñ–µ—Ä –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    local buffer_info=$(save_to_tmp)
    
    if [ -n "$buffer_info" ]; then
        local tmp_file="${buffer_info%:*}"
        local file_size="${buffer_info#*:}"
        local size_kb=$((file_size / 1024))
        
        echo "‚úÖ –í –±—É—Ñ–µ—Ä–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
        echo "üìè –†–∞–∑–º–µ—Ä: ${size_kb} KB"
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–∞–Ω–¥–∞—Ö
        echo "$tmp_file" > "/tmp/current_clipboard_image.txt"
        
    else
        echo "üì≠ –í –±—É—Ñ–µ—Ä–µ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
        echo "üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (‚åò+C)"
    fi
    
    echo "---"
    
    if [ -n "$buffer_info" ]; then
        echo "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ | shell=\"$0\" param1=\"_save\" refresh=true"
        echo "üëÄ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä | shell=\"$0\" param1=\"_preview\""
    fi
    
    echo "üìÅ –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É | shell=\"$0\" param1=\"_open_folder\""
    echo "üîÑ –û–±–Ω–æ–≤–∏—Ç—å | refresh=true"
}

# –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
_save() {
    local tmp_file
    if [ -f "/tmp/current_clipboard_image.txt" ]; then
        tmp_file=$(cat "/tmp/current_clipboard_image.txt")
    fi
    
    if [ -z "$tmp_file" ] || [ ! -f "$tmp_file" ]; then
        osascript -e 'display dialog "‚ùå –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±—É—Ñ–µ—Ä–µ" buttons {"OK"} default button "OK" with icon stop'
        return
    fi
    
    local filename="img_$(date +%Y%m%d_%H%M%S).png"
    local full_path="$SAVE_DIR/$filename"
    
    # –ö–æ–ø–∏—Ä—É–µ–º –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ –ø–∞–ø–∫—É
    if cp "$tmp_file" "$full_path" 2>/dev/null && [ -f "$full_path" ]; then
        local file_size=$(wc -c < "$full_path" 2>/dev/null)
        local file_size_kb=$((file_size / 1024))
        
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        rm -f "$tmp_file" "/tmp/current_clipboard_image.txt" 2>/dev/null
        
        osascript -e "display notification \"üì∏ $filename (${file_size_kb} KB)\" with title \"Image Saved\""
        echo "‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: $filename"
    else
        osascript -e 'display notification "‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è" with title "Error"'
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
    fi
}

# –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
_preview() {
    local tmp_file
    if [ -f "/tmp/current_clipboard_image.txt" ]; then
        tmp_file=$(cat "/tmp/current_clipboard_image.txt")
    fi
    
    if [ -z "$tmp_file" ] || [ ! -f "$tmp_file" ]; then
        osascript -e 'display dialog "‚ùå –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±—É—Ñ–µ—Ä–µ" buttons {"OK"} default button "OK" with icon stop'
        return
    fi
    
    open -a "Preview" "$tmp_file"
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥
    (sleep 5; rm -f "$tmp_file" "/tmp/current_clipboard_image.txt" 2>/dev/null) &
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ pngpaste
_install() {
    if command -v brew &> /dev/null; then
        osascript -e 'tell application "Terminal" to activate' -e 'tell application "Terminal" to do script "brew install pngpaste"'
        echo "üì¶ –ó–∞–ø—É—â–µ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ pngpaste —á–µ—Ä–µ–∑ Homebrew"
    else
        osascript -e 'display dialog "‚ùå Homebrew –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\n\n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Homebrew —Å —Å–∞–π—Ç–∞:\nhttps://brew.sh" buttons {"OK"} default button "OK" with icon stop'
        echo "‚ùå Homebrew –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É
_open_folder() {
    open "$SAVE_DIR"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
case "${1}" in
    "_save") _save ;;
    "_preview") _preview ;;
    "_install") _install ;;
    "_open_folder") _open_folder ;;
    *) main ;;
esac
