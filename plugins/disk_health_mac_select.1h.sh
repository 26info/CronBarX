#!/bin/bash
# –ú–æ–Ω–∏—Ç–æ—Ä –¥–∏—Å–∫–æ–≤ –¥–ª—è CronBarX (–±–µ–∑ sudo)

# –ü—Ä—è–º–æ–π –ø—É—Ç—å –∫ smartctl
SMARTCTL="/opt/homebrew/bin/smartctl"
# –û—Å–Ω–æ–≤–Ω–æ–π –¥–∏—Å–∫
DISK="/dev/disk0"
# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
DPART="/dev/disk3s1"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –¥–∏—Å–∫–∞
get_disk_usage() {
    local disk_info=$(df -h | grep -E "(Volumes/Data)" | grep "${DPART}")
    
    if [ -n "$disk_info" ]; then
        usage_percent=$(echo "$disk_info" | awk '{print $5}' | sed 's/%//')
        used=$(echo "$disk_info" | awk '{print $3}')
        total=$(echo "$disk_info" | awk '{print $2}')
        echo "$usage_percent|$used|$total"
    else
        echo "?||"
    fi
}

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –¥–∏—Å–∫–∞
IFS='|' read -r usage_percent used total <<< "$(get_disk_usage)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å smartctl
if [ ! -x "$SMARTCTL" ]; then
    echo "üíΩ ?  ${usage_percent}%"
    echo "---"
    echo "smartctl –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "–ü—É—Ç—å: $SMARTCTL"
    echo "---"
    echo "üîÑ –û–±–Ω–æ–≤–∏—Ç—å | refresh=true"
    exit 0
fi

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Å–∫–µ (–±–µ–∑ sudo)
SMART_INFO=$("$SMARTCTL" -a "$DISK" 2>/dev/null)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∏–ª–∏ –ª–∏ –º—ã –¥–∞–Ω–Ω—ã–µ
if [ -z "$SMART_INFO" ]; then
    echo "üíΩ ?  ${usage_percent}%"
    echo "---"
    echo "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ SMART"
    echo "–î–∏—Å–∫: $DISK"
    echo "–ö–æ–º–∞–Ω–¥–∞: $SMARTCTL -a $DISK"
    echo "---"
    echo "üîÑ –û–±–Ω–æ–≤–∏—Ç—å | refresh=true"
    exit 0
fi

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
get_temperature() {
    local smart_info="$1"
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –Ω–∞–π—Ç–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É
    
    # 1. –ò—â–µ–º –≤ –∞—Ç—Ä–∏–±—É—Ç–∞—Ö SMART (–ø–æ–ª–µ RAW_VALUE)
    temp_attr=$(echo "$smart_info" | grep -E "^[[:space:]]*(190|194|197|198|199)" | grep -v "0[[:space:]]*\-" | awk '{print $10}' | grep -E "^[0-9]+$" | head -1)
    
    if [ -n "$temp_attr" ] && [ "$temp_attr" -gt 0 ] && [ "$temp_attr" -lt 150 ]; then
        echo "$temp_attr"
        return 0
    fi
    
    # 2. –ò—â–µ–º –≤ —Å—Ç—Ä–æ–∫–µ —Å Temperature (NVMe –¥–∏—Å–∫–∏)
    temp_line=$(echo "$smart_info" | grep -i "temperature" | grep -E "[0-9]+" | head -1)
    if [ -n "$temp_line" ]; then
        temp_value=$(echo "$temp_line" | grep -oE "[0-9]{1,3}" | head -1)
        if [ -n "$temp_value" ] && [ "$temp_value" -gt 0 ] && [ "$temp_value" -lt 150 ]; then
            echo "$temp_value"
            return 0
        fi
    fi
    
    # 3. –ò—â–µ–º –≤ Current Drive Temperature
    temp_current=$(echo "$smart_info" | grep -i "current drive temperature" | grep -oE "[0-9]{1,3}" | head -1)
    if [ -n "$temp_current" ] && [ "$temp_current" -gt 0 ] && [ "$temp_current" -lt 150 ]; then
        echo "$temp_current"
        return 0
    fi
    
    # 4. –ò—â–µ–º –≤ Airflow Temperature
    temp_airflow=$(echo "$smart_info" | grep -i "airflow temperature" | grep -oE "[0-9]{1,3}" | head -1)
    if [ -n "$temp_airflow" ] && [ "$temp_airflow" -gt 0 ] && [ "$temp_airflow" -lt 150 ]; then
        echo "$temp_airflow"
        return 0
    fi
    
    return 1
}

# –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å—Ç–∞—Ç—É—Å –∑–¥–æ—Ä–æ–≤—å—è
if echo "$SMART_INFO" | grep -q "PASSED\|OK"; then
    STATUS="‚úÖ"
else
    STATUS="‚ö†Ô∏è"
fi

# –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –º–æ–¥–µ–ª—å –¥–∏—Å–∫–∞
MODEL=$(echo "$SMART_INFO" | grep -E "Model|Product" | head -1 | cut -d: -f2- | sed 's/^ *//')

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–∏—Å–∫–∞
if echo "$SMART_INFO" | grep -q "SSD\|Solid State"; then
    DISK_TYPE="SSD"
    ICON="üíæ"
elif echo "$SMART_INFO" | grep -q "HDD\|Hard Disk"; then
    DISK_TYPE="HDD"
    ICON="üíø"
else
    DISK_TYPE="Unknown"
    ICON="üíΩ"
fi

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É
TEMPERATURE=$(get_temperature "$SMART_INFO")

# –í—ã–≤–æ–¥ –≤ —Å—Ç—Ä–æ–∫—É –º–µ–Ω—é
if [ -n "$TEMPERATURE" ]; then
    echo "${ICON}${STATUS} ${TEMPERATURE}¬∞C ${usage_percent}%"
else
    echo "${ICON}${STATUS} ${usage_percent}%"
fi

echo "---"

# –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo "üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏—Å–∫–∞"
echo "---"
echo "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: $DISK"

if [ -n "$MODEL" ]; then
    echo "–ú–æ–¥–µ–ª—å: $MODEL"
fi

echo "–¢–∏–ø: $DISK_TYPE"
echo "–°—Ç–∞—Ç—É—Å: $STATUS"

if [ -n "$TEMPERATURE" ]; then
    echo "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${TEMPERATURE}¬∞C"
    
    # –û—Ü–µ–Ω–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
    if [ "$TEMPERATURE" -gt 60 ]; then
        echo "‚Üí ‚ö†Ô∏è –í—ã—Å–æ–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞!"
    elif [ "$TEMPERATURE" -lt 10 ]; then
        echo "‚Üí ‚ö†Ô∏è –ù–∏–∑–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞"
    else
        echo "‚Üí ‚úÖ –ù–æ—Ä–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞"
    fi
else
    echo "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞"
fi

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –¥–∏—Å–∫–∞
echo "---"
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞"

if [ -n "$usage_percent" ] && [ "$usage_percent" != "?" ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${usage_percent}%"
    if [ -n "$used" ] && [ -n "$total" ]; then
        echo "–û–±—ä–µ–º: $used –∏–∑ $total"
    fi
    
    # –¶–≤–µ—Ç–æ–≤–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏
    if [ "$usage_percent" -gt 90 ]; then
        echo "‚Üí üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ!"
    elif [ "$usage_percent" -gt 80 ]; then
        echo "‚Üí üü° –í—ã—Å–æ–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ"
    else
        echo "‚Üí üü¢ –ù–æ—Ä–º–∞–ª—å–Ω–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ"
    fi
else
    echo "–î–∞–Ω–Ω—ã–µ –æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏: –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã"
fi

## –ö–ª—é—á–µ–≤—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã SMART

# –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã
power_on_hours=$(echo "$SMART_INFO" | grep "^ *9 " | awk '{print $10}')
if [ -n "$power_on_hours" ]; then
    echo "---"
    echo "üîç –ö–ª—é—á–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã SMART:"
    echo "‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: $power_on_hours —á–∞—Å–æ–≤"
fi

# –¶–∏–∫–ª—ã –≤–∫–ª—é—á–µ–Ω–∏—è
power_cycles=$(echo "$SMART_INFO" | grep "^ *12 " | awk '{print $10}')
if [ -n "$power_cycles" ]; then
    echo "‚Ä¢ –¶–∏–∫–ª—ã –≤–∫–ª—é—á–µ–Ω–∏—è: $power_cycles"
fi

# –ü–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–µ–∫—Ç–æ—Ä–∞
reallocated=$(echo "$SMART_INFO" | grep "^ *5 " | awk '{print $10}')
if [ -n "$reallocated" ]; then
    if [ "$reallocated" -eq 0 ]; then
        echo "‚Ä¢ –ü–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–µ–∫—Ç–æ—Ä–∞: $reallocated (–æ—Ç–ª–∏—á–Ω–æ)"
    else
        echo "‚Ä¢ –ü–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–µ–∫—Ç–æ—Ä–∞: $reallocated"
    fi
fi

# –î–ª—è SSD: –æ—Å—Ç–∞–≤—à–∏–π—Å—è —Ä–µ—Å—É—Ä—Å
ssd_life_left=$(echo "$SMART_INFO" | grep "^ *202 " | awk '{print $10}')
if [ -n "$ssd_life_left" ]; then
    echo "‚Ä¢ –û—Å—Ç–∞–≤—à–∏–π—Å—è —Ä–µ—Å—É—Ä—Å: ${ssd_life_left}%"
fi

#echo "---"
#echo "üîÑ –û–±–Ω–æ–≤–∏—Ç—å | refresh=true"