#!/bin/bash
# Smart Reminders - CronBarX
# –£–º–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏

REMINDERS_FILE="$HOME/.smart_reminders"

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f "$REMINDERS_FILE" ]; then
    touch "$REMINDERS_FILE"
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞
clean_text() {
    local text="$1"
    text="${text//\"/\'}"
    text="${text//\\/}"
    text="${text//|/}"
    text="${text//\$/}"
    text="${text//\`/}"
    echo "$text" | sed 's/  */ /g' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
}

# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID
generate_id() {
    date +%s%N | cut -c1-16
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
check_reminders() {
    local current_timestamp=$(date "+%s")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    local temp_file="${REMINDERS_FILE}.tmp"
    > "$temp_file"
    
    # –ß–∏—Ç–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    if [ -f "$REMINDERS_FILE" ] && [ -s "$REMINDERS_FILE" ]; then
        while IFS= read -r line || [ -n "$line" ]; do
            [ -z "$line" ] && continue
            
            # –†–∞–∑–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—É
            IFS='|' read -r id event_time event_title status last_notified <<< "$line"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏
            local event_timestamp=$(date -j -f "%Y-%m-%d %H:%M" "$event_time" "+%s" 2>/dev/null)
            if [ -z "$event_timestamp" ]; then
                echo "$line" >> "$temp_file"
                continue
            fi
            
            local time_diff=$((event_timestamp - current_timestamp))
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã
            case "$status" in
                "pending")
                    # –ï—Å–ª–∏ last_notified = "new", —ç—Ç–æ –Ω–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ - –∂–¥–µ–º –º–∏–Ω–∏–º—É–º 5 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º
                    if [ "$last_notified" = "new" ]; then
                        # –ü–µ—Ä–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è
                        local created_time=$(echo "$id" | cut -c1-10)
                        local current_time=$(date "+%s")
                        local time_since_created=$((current_time - created_time))
                        
                        if [ $time_since_created -ge 300 ]; then # 5 –º–∏–Ω—É—Ç
                            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–±—ã—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ
                            if [ $time_diff -le 3600 ] && [ $time_diff -gt 1800 ]; then
                                osascript -e "display notification \"‚è∞ –ß–µ—Ä–µ–∑ 1 —á–∞—Å: $event_title\" with title \"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\"" &>/dev/null
                                osascript -e "beep" &>/dev/null
                                echo "${id}|${event_time}|${event_title}|pending|1h" >> "$temp_file"
                            elif [ $time_diff -le 1800 ] && [ $time_diff -gt 600 ]; then
                                osascript -e "display notification \"‚ö†Ô∏è –ß–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç: $event_title\" with title \"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\"" &>/dev/null
                                osascript -e "beep" &>/dev/null
                                echo "${id}|${event_time}|${event_title}|pending|30m" >> "$temp_file"
                            elif [ $time_diff -le 600 ] && [ $time_diff -gt 0 ]; then
                                osascript -e "display notification \"üîî –ß–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç: $event_title\" with title \"–°–∫–æ—Ä–æ —Å–æ–±—ã—Ç–∏–µ!\"" &>/dev/null
                                osascript -e "beep" &>/dev/null
                                echo "${id}|${event_time}|${event_title}|pending|10m" >> "$temp_file"
                            elif [ $time_diff -le 0 ]; then
                                osascript -e "display notification \"üö® –°–ï–ô–ß–ê–°: $event_title\" with title \"–°–û–ë–´–¢–ò–ï!\"" &>/dev/null
                                osascript -e "beep" &>/dev/null
                                echo "${id}|${event_time}|${event_title}|active|event" >> "$temp_file"
                            else
                                echo "${id}|${event_time}|${event_title}|pending|new" >> "$temp_file"
                            fi
                        else
                            # –ï—â–µ –Ω–µ –ø—Ä–æ—à–ª–æ 5 –º–∏–Ω—É—Ç - –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
                            echo "$line" >> "$temp_file"
                        fi
                    else
                        # –û–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
                        if [ $time_diff -le 3600 ] && [ $time_diff -gt 1800 ] && [ "$last_notified" != "1h" ]; then
                            osascript -e "display notification \"‚è∞ –ß–µ—Ä–µ–∑ 1 —á–∞—Å: $event_title\" with title \"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\"" &>/dev/null
                            osascript -e "beep" &>/dev/null
                            echo "${id}|${event_time}|${event_title}|pending|1h" >> "$temp_file"
                        elif [ $time_diff -le 1800 ] && [ $time_diff -gt 600 ] && [ "$last_notified" != "30m" ]; then
                            osascript -e "display notification \"‚ö†Ô∏è –ß–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç: $event_title\" with title \"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\"" &>/dev/null
                            osascript -e "beep" &>/dev/null
                            echo "${id}|${event_time}|${event_title}|pending|30m" >> "$temp_file"
                        elif [ $time_diff -le 600 ] && [ $time_diff -gt 0 ] && [ "$last_notified" != "10m" ]; then
                            osascript -e "display notification \"üîî –ß–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç: $event_title\" with title \"–°–∫–æ—Ä–æ —Å–æ–±—ã—Ç–∏–µ!\"" &>/dev/null
                            osascript -e "beep" &>/dev/null
                            echo "${id}|${event_time}|${event_title}|pending|10m" >> "$temp_file"
                        elif [ $time_diff -le 0 ] && [ "$last_notified" != "event" ]; then
                            osascript -e "display notification \"üö® –°–ï–ô–ß–ê–°: $event_title\" with title \"–°–û–ë–´–¢–ò–ï!\"" &>/dev/null
                            osascript -e "beep" &>/dev/null
                            echo "${id}|${event_time}|${event_title}|active|event" >> "$temp_file"
                        else
                            echo "$line" >> "$temp_file"
                        fi
                    fi
                    ;;
                    
                "active")
                    local abs_time_diff=${time_diff#-}
                    local hours_passed=$((abs_time_diff / 3600))
                    if [ $hours_passed -gt 0 ] && [ "$last_notified" != "h${hours_passed}" ]; then
                        osascript -e "display notification \"‚è≥ –ü—Ä–æ—à–ª–æ ${hours_passed}—á: $event_title\" with title \"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\"" &>/dev/null
                        osascript -e "beep" &>/dev/null
                        echo "${id}|${event_time}|${event_title}|active|h${hours_passed}" >> "$temp_file"
                    else
                        echo "$line" >> "$temp_file"
                    fi
                    ;;
                    
                *)
                    echo "$line" >> "$temp_file"
                    ;;
            esac
        done < "$REMINDERS_FILE"
    fi
    
    # –ó–∞–º–µ–Ω—è–µ–º —Ñ–∞–π–ª
    mv "$temp_file" "$REMINDERS_FILE" 2>/dev/null
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    check_reminders
    
    echo "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"
    echo "---"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    if [ ! -s "$REMINDERS_FILE" ]; then
        echo "üì≠ –ù–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"
        echo "---"
    else
        echo "üéØ –ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è:"
        
        # –°–æ–±–∏—Ä–∞–µ–º –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
        local reminders=()
        while IFS= read -r line || [ -n "$line" ]; do
            [ -z "$line" ] && continue
            IFS='|' read -r id event_time event_title status last_notified <<< "$line"
            local timestamp=$(date -j -f "%Y-%m-%d %H:%M" "$event_time" "+%s" 2>/dev/null)
            if [ -n "$timestamp" ]; then
                reminders+=("${timestamp}|${id}|${event_time}|${event_title}|${status}")
            fi
        done < "$REMINDERS_FILE"
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏
        if [ ${#reminders[@]} -gt 0 ]; then
            printf '%s\n' "${reminders[@]}" | sort -n | head -5 | while IFS='|' read -r timestamp id event_time event_title status; do
                local time_display=$(date -j -f "%s" "$timestamp" "+%H:%M" 2>/dev/null)
                local today=$(date "+%Y-%m-%d")
                local event_date=$(echo "$event_time" | cut -d' ' -f1)
                
                if [ "$event_date" = "$today" ]; then
                    echo "üïê $time_display: $event_title | shell=\"$0\" param1=\"_manage\" param2=\"$id\" refresh=true"
                else
                    echo "üìÖ $event_time: $event_title | shell=\"$0\" param1=\"_manage\" param2=\"$id\" refresh=true"
                fi
            done
        else
            echo "üì≠ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"
        fi
        echo "---"
    fi
    
    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    echo "‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
    echo "‚è∞ –ù–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ | shell=\"$0\" param1=\"_new\" refresh=true"
    if [ -s "$REMINDERS_FILE" ]; then
        echo "üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ | shell=\"$0\" param1=\"_clear\" refresh=true"
    fi
}

# –ù–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
new_reminder() {
    local default_time=$(date -v+1H "+%Y-%m-%d %H:%M")
    
    local result=$(osascript <<EOF
    set defaultTime to do shell script "date -v+1H '+%Y-%m-%d %H:%M'"
    try
        set timeResult to text returned of (display dialog "–°–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ:\n\n–§–æ—Ä–º–∞—Ç: –ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú\n–ü—Ä–∏–º–µ—Ä: " & defaultTime default answer defaultTime buttons {"–û—Ç–º–µ–Ω–∞", "–î–∞–ª–µ–µ"} default button "–î–∞–ª–µ–µ")
        
        set titleResult to text returned of (display dialog "–¢–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:" default answer "" buttons {"–û—Ç–º–µ–Ω–∞", "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"} default button "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        
        timeResult & "|" & titleResult
    on error
        "CANCEL"
    end try
EOF
    )
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –û—Ç–º–µ–Ω–∞
    if [ "$result" = "CANCEL" ] || [ -z "$result" ]; then
        echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
        return
    fi
    
    local event_time=$(echo "$result" | cut -d'|' -f1)
    local event_title=$(echo "$result" | cut -d'|' -f2-)
    
    if date -j -f "%Y-%m-%d %H:%M" "$event_time" "+%s" &>/dev/null; then
        local clean_title=$(clean_text "$event_title")
        local reminder_id=$(generate_id)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å —Å—Ç–∞—Ç—É—Å–æ–º "new" - –∑–∞—â–∏—Ç–∞ –æ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        echo "${reminder_id}|${event_time}|${clean_title}|pending|new" >> "$REMINDERS_FILE"
        osascript -e "display notification \"‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –Ω–∞ $event_time\" with title \"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\"" &>/dev/null
        echo "‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: $event_time - $clean_title"
    else
        osascript -e 'display dialog "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏!" buttons {"OK"} default button "OK" with icon stop' &>/dev/null
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏"
    fi
}

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º
manage_reminder() {
    local reminder_id="$1"
    
    # –ò—â–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    local reminder_line=""
    while IFS= read -r line || [ -n "$line" ]; do
        if [[ "$line" == "${reminder_id}|"* ]]; then
            reminder_line="$line"
            break
        fi
    done < "$REMINDERS_FILE"
    
    if [ -z "$reminder_line" ]; then
        osascript -e 'display dialog "‚ùå –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" buttons {"OK"} default button "OK" with icon stop' &>/dev/null
        echo "‚ùå –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        return
    fi
    
    IFS='|' read -r id event_time event_title status last_notified <<< "$reminder_line"
    
    local action=$(osascript -e "button returned of (display dialog \"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º:\\n–í—Ä–µ–º—è: $event_time\\n–¢–µ–∫—Å—Ç: $event_title\" buttons {\"–ù–∞–∑–∞–¥\", \"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\", \"–£–¥–∞–ª–∏—Ç—å\"} default button \"–ù–∞–∑–∞–¥\")")
    
    case "$action" in
        "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")
            # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
            local result=$(osascript <<EOF
            set oldTime to "$event_time"
            set oldTitle to "$event_title"
            
            try
                set timeResult to text returned of (display dialog "–ù–æ–≤–æ–µ –≤—Ä–µ–º—è:\n\n–§–æ—Ä–º–∞—Ç: –ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú" default answer oldTime buttons {"–û—Ç–º–µ–Ω–∞", "–î–∞–ª–µ–µ"} default button "–î–∞–ª–µ–µ")
                
                set titleResult to text returned of (display dialog "–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:" default answer oldTitle buttons {"–û—Ç–º–µ–Ω–∞", "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"} default button "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
                
                timeResult & "|" & titleResult
            on error
                "CANCEL"
            end try
EOF
            )
            
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –û—Ç–º–µ–Ω–∞
            if [ "$result" = "CANCEL" ] || [ -z "$result" ]; then
                echo "‚ùå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
                return
            fi
            
            local new_time=$(echo "$result" | cut -d'|' -f1)
            local new_title=$(echo "$result" | cut -d'|' -f2-)
            
            if date -j -f "%Y-%m-%d %H:%M" "$new_time" "+%s" &>/dev/null; then
                local clean_title=$(clean_text "$new_title")
                
                # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –±–µ–∑ —Å—Ç–∞—Ä–æ–π –∑–∞–ø–∏—Å–∏
                local temp_file="${REMINDERS_FILE}.tmp"
                > "$temp_file"
                while IFS= read -r line || [ -n "$line" ]; do
                    if [[ "$line" != "${reminder_id}|"* ]]; then
                        echo "$line" >> "$temp_file"
                    fi
                done < "$REMINDERS_FILE"
                
                # –î–æ–±–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                echo "${reminder_id}|${new_time}|${clean_title}|pending|new" >> "$temp_file"
                mv "$temp_file" "$REMINDERS_FILE"
                
                osascript -e "display notification \"‚úèÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ\" with title \"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\"" &>/dev/null
                echo "‚úèÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: $new_time - $clean_title"
            else
                osascript -e 'display dialog "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏!" buttons {"OK"} default button "OK" with icon stop' &>/dev/null
                echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏"
            fi
            ;;
            
        "–£–¥–∞–ª–∏—Ç—å")
            # –£–¥–∞–ª–µ–Ω–∏–µ
            local temp_file="${REMINDERS_FILE}.tmp"
            > "$temp_file"
            while IFS= read -r line || [ -n "$line" ]; do
                if [[ "$line" != "${reminder_id}|"* ]]; then
                    echo "$line" >> "$temp_file"
                fi
            done < "$REMINDERS_FILE"
            mv "$temp_file" "$REMINDERS_FILE"
            
            osascript -e "display notification \"üóëÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ\" with title \"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\"" &>/dev/null
            echo "üóëÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ"
            ;;
            
        *)
            echo "üîô –ù–∞–∑–∞–¥"
            ;;
    esac
}

# –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
clear_reminders() {
    if [ ! -s "$REMINDERS_FILE" ]; then
        echo "üì≠ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —É–∂–µ –ø—É—Å—Ç—ã"
        return
    fi
    
    local response=$(osascript -e "button returned of (display dialog \"–£–¥–∞–ª–∏—Ç—å –í–°–ï –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è?\" buttons {\"–û—Ç–º–µ–Ω–∞\", \"–£–¥–∞–ª–∏—Ç—å\"} default button \"–û—Ç–º–µ–Ω–∞\" with icon caution)")
    
    if [ "$response" = "–£–¥–∞–ª–∏—Ç—å" ]; then
        > "$REMINDERS_FILE"
        osascript -e 'display notification "üóëÔ∏è –í—Å–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã" with title "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"' &>/dev/null
        echo "üóëÔ∏è –í—Å–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã"
    else
        echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
case "${1}" in
    "_new") new_reminder ;;
    "_manage") manage_reminder "${2}" ;;
    "_clear") clear_reminders ;;
    *) main ;;
esac