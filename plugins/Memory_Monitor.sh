#!/bin/bash
# Memory Usage Monitor - CronBarX
# –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞–º—è—Ç–∏
get_memory_info() {
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º vm_stat –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    local vm_stat_output=$(vm_stat)
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é –ø–∞–º—è—Ç—å
    local total_memory=$(sysctl -n hw.memsize)
    total_memory=$((total_memory / 1024 / 1024)) # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ MB
    
    # –ü–∞—Ä—Å–∏–º vm_stat output
    local pages_free=$(echo "$vm_stat_output" | grep "Pages free" | awk '{print $3}' | sed 's/\.//')
    local pages_active=$(echo "$vm_stat_output" | grep "Pages active" | awk '{print $3}' | sed 's/\.//')
    local pages_inactive=$(echo "$vm_stat_output" | grep "Pages inactive" | awk '{print $3}' | sed 's/\.//')
    local pages_wired=$(echo "$vm_stat_output" | grep "Pages wired down" | awk '{print $4}' | sed 's/\.//')
    local pages_compressed=$(echo "$vm_stat_output" | grep "Pages occupied by compressor" | awk '{print $5}' | sed 's/\.//')
    
    # –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–æ–±—ã—á–Ω–æ 4096 –±–∞–π—Ç)
    local page_size=$(vm_stat | grep "page size" | awk '{print $8}')
    
    # –í—ã—á–∏—Å–ª—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—É—é –ø–∞–º—è—Ç—å
    local used_pages=$((pages_active + pages_wired + pages_compressed))
    local used_memory=$((used_pages * page_size / 1024 / 1024)) # MB
    
    # –í—ã—á–∏—Å–ª—è–µ–º —Å–≤–æ–±–æ–¥–Ω—É—é –ø–∞–º—è—Ç—å
    local free_memory=$((pages_free * page_size / 1024 / 1024)) # MB
    local inactive_memory=$((pages_inactive * page_size / 1024 / 1024)) # MB
    
    # –û–±—â–∞—è –¥–æ—Å—Ç—É–ø–Ω–∞—è –ø–∞–º—è—Ç—å (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–∞—è + —Å–≤–æ–±–æ–¥–Ω–∞—è)
    local available_memory=$((used_memory + free_memory + inactive_memory))
    
    # –ü—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    local usage_percent=$((used_memory * 100 / total_memory))
    
    echo "$used_memory:$free_memory:$total_memory:$usage_percent:$inactive_memory"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ swap
get_swap_info() {
    local swap_used=$(sysctl -n vm.swapusage | awk '{print $4}' | sed 's/M//')
    local swap_total=$(sysctl -n vm.swapusage | awk '{print $7}' | sed 's/M//')
    local swap_percent=0
    
    if [ "$swap_total" -gt 0 ]; then
        swap_percent=$((swap_used * 100 / swap_total))
    fi
    
    echo "$swap_used:$swap_total:$swap_percent"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–ø –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ –ø–∞–º—è—Ç–∏
get_top_memory_processes() {
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-5 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø–∞–º—è—Ç–∏
    ps -eo pid,ppid,user,%mem,%cpu,rss,comm -c | head -6 | tail -5
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –ø–∞–º—è—Ç–∏
format_memory() {
    local size_mb="$1"
    if [ "$size_mb" -ge 1024 ]; then
        local size_gb=$(echo "scale=1; $size_mb / 1024" | bc)
        echo "${size_gb} GB"
    else
        echo "${size_mb} MB"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
create_memory_bar() {
    local percent="$1"
    local width=10
    local filled=$((percent * width / 100))
    local empty=$((width - filled))
    
    local bar="["
    for ((i=0; i<filled; i++)); do
        bar+="‚ñà"
    done
    for ((i=0; i<empty; i++)); do
        bar+="‚ñë"
    done
    bar+="]"
    
    echo "$bar"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–º—è—Ç–∏
    IFS=':' read -r used_memory free_memory total_memory usage_percent inactive_memory <<< "$(get_memory_info)"
    IFS=':' read -r swap_used swap_total swap_percent <<< "$(get_swap_info)"
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã
    used_formatted=$(format_memory "$used_memory")
    free_formatted=$(format_memory "$free_memory")
    total_formatted=$(format_memory "$total_memory")
    inactive_formatted=$(format_memory "$inactive_memory")
    swap_used_formatted=$(format_memory "$swap_used")
    swap_total_formatted=$(format_memory "$swap_total")
    
    # –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    memory_bar=$(create_memory_bar "$usage_percent")
    swap_bar=$(create_memory_bar "$swap_percent")
    
    # –í—ã–≤–æ–¥ –≤ —Å—Ç—Ä–æ–∫—É –º–µ–Ω—é
    echo "üß† ${usage_percent}%"
    echo "---"
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${usage_percent}%"
    echo "---"
    echo "üìä –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å (RAM)"
    echo "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${used_formatted} / ${total_formatted}"
    echo "‚Ä¢ –°–≤–æ–±–æ–¥–Ω–æ: ${free_formatted}"
    echo "‚Ä¢ –ù–µ–∞–∫—Ç–∏–≤–Ω–æ: ${inactive_formatted}"
    echo "‚Ä¢ $memory_bar ${usage_percent}%"
    echo "---"
    
    # Swap –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    echo "üîÑ –§–∞–π–ª –ø–æ–¥–∫–∞—á–∫–∏ (Swap)"
    echo "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${swap_used_formatted} / ${swap_total_formatted}"
    echo "‚Ä¢ $swap_bar ${swap_percent}%"
    echo "---"
    
    # –¢–æ–ø –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ –ø–∞–º—è—Ç–∏
    echo "üî• –¢–æ–ø –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ –ø–∞–º—è—Ç–∏:"
    get_top_memory_processes | while read line; do
        if [ -n "$line" ]; then
            echo "‚Ä¢ $line" | awk '{printf "%-30s %4s%% %8s MB\n", $7, $4, $6/1024}'
        fi
    done
    
    echo "---"
    
    # –î–µ–π—Å—Ç–≤–∏—è
    echo "üìä –î–µ–π—Å—Ç–≤–∏—è:"
    echo "üîÑ –û–±–Ω–æ–≤–∏—Ç—å | refresh=true"
    echo "üîç –ú–æ–Ω–∏—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ | shell=open -a \"Activity Monitor\""
    echo "üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –ø–∞–º—è—Ç—å (purge) | shell=\"$0\" _purge_memory"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
case "$1" in
    "_purge_memory")
        osascript -e 'tell application "Terminal" to activate' -e 'delay 0.5'
        osascript -e 'tell application "Terminal" to do script "sudo purge"'
        ;;
    *)
        main
        ;;
esac